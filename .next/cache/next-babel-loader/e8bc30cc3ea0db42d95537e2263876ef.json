{"ast":null,"code":"var _jsxFileName = \"/Users/nickloui/Dev/sandbox/COVID19-How-To-Scanner/pages/_document.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/no-danger */\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { extractStyles } from 'evergreen-ui';\nexport default class MyDocument extends Document {\n  static getInitialProps({\n    renderPage\n  }) {\n    const page = renderPage(); // `css` is a string with css from both glamor and ui-box.\n    // No need to get the glamor css manually if you are using it elsewhere in your app.\n    //\n    // `hydrationScript` is a script you should render on the server.\n    // It contains a stringified version of the glamor and ui-box caches.\n    // Evergreen will look for that script on the client and automatically hydrate\n    // both glamor and ui-box.\n\n    const {\n      css,\n      hydrationScript\n    } = extractStyles();\n    return _objectSpread({}, page, {\n      css,\n      hydrationScript\n    });\n  }\n\n  render() {\n    const {\n      css,\n      hydrationScript\n    } = this.props;\n    return __jsx(\"html\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"COVID-19 \\\"How To\\\" Tracker\"), __jsx(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: css\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), hydrationScript, __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/nickloui/Dev/sandbox/COVID19-How-To-Scanner/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","extractStyles","MyDocument","getInitialProps","renderPage","page","css","hydrationScript","render","props","__html"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC/C,SAAOM,eAAP,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAuC;AACrC,UAAMC,IAAI,GAAGD,UAAU,EAAvB,CADqC,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAM;AAAEE,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAA2BN,aAAa,EAA9C;AAEA,6BACKI,IADL;AAEEC,MAAAA,GAFF;AAGEC,MAAAA;AAHF;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAA2B,KAAKE,KAAtC;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAO,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEJ;AAAV,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGC,eAFH,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CANF,CADF;AAcD;;AApC8C","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react'\nimport Document, { Head, Main, NextScript } from 'next/document'\nimport { extractStyles } from 'evergreen-ui'\n\nexport default class MyDocument extends Document {\n  static getInitialProps({ renderPage }) {\n    const page = renderPage()\n    // `css` is a string with css from both glamor and ui-box.\n    // No need to get the glamor css manually if you are using it elsewhere in your app.\n    //\n    // `hydrationScript` is a script you should render on the server.\n    // It contains a stringified version of the glamor and ui-box caches.\n    // Evergreen will look for that script on the client and automatically hydrate\n    // both glamor and ui-box.\n    const { css, hydrationScript } = extractStyles()\n\n    return {\n      ...page,\n      css,\n      hydrationScript\n    }\n  }\n\n  render() {\n    const { css, hydrationScript } = this.props\n\n    return (\n      <html>\n        <Head>\n          <title>COVID-19 \"How To\" Tracker</title>\n          <style dangerouslySetInnerHTML={{ __html: css }} />\n        </Head>\n\n        <body>\n          <Main />\n          {hydrationScript}\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}